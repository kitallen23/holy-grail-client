name: Build and Deploy

on:
    push:
        branches: [main]

jobs:
    lint:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version-file: ".nvmrc"

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Run lint
              run: pnpm lint

    build:
        runs-on: ubuntu-latest
        needs: lint

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version-file: ".nvmrc"

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build project
              run: pnpm build

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: dist
                  path: dist/

    deploy:
        runs-on: ubuntu-latest
        needs: build

        steps:
            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                  name: dist
                  path: dist/

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ vars.AWS_REGION }}

            - name: Deploy to S3
              run: |
                  aws s3 sync dist/ s3://${{ vars.AWS_S3_BUCKET }} --delete

            - name: Invalidate CloudFront (optional)
              run: |
                  if [ -n "${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
                    aws cloudfront create-invalidation --distribution-id ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
                  fi
